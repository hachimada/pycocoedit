name: CI

# Tests doesn't run if you push without a PR, please create a PR to run tests.
on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: "3.10"
            coverage: "false"
          - python-version: "3.11"
            coverage: "false"
          - python-version: "3.12"
            coverage: "false"
          - python-version: "3.13"
            coverage: "true"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Install dependencies
        run: |
          poetry install --no-interaction

      - name: Ruff lint
        run: poetry run ruff check .

      - name: mypy
        run: poetry run mypy pycocoedit

      # ---------- Test + (conditionally) coverage ----------
      - name: Run tests
        run: |
          source .venv/bin/activate
          if [ "${{ matrix.coverage }}" = "true" ]; then
            poetry run pytest \
              --cov=pycocoedit \
              --cov-report=xml \
              --cov-branch \
              --cov-report=term-missing \
              --junitxml=junit.xml \
              -o junit_family=legacy
          else
            poetry run pytest -q
          fi

      # ---------- Upload to Codecov -------
      - name: Upload coverage to Codecov
        if: ${{ matrix.coverage == 'true' }}
        uses: codecov/codecov-action@v4
        with:
          file: coverage.xml     # created by pytest-cov
          flags: py313
          # token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() && matrix.coverage == 'true' }}
        uses: codecov/test-results-action@v1
        # with:
        #   token: ${{ secrets.CODECOV_TOKEN }}
